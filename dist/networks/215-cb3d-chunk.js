const t=(t,e)=>t-e,e=(t,e)=>t+e,r=(t,e)=>t%e>1?t-1:-1,a=(t,e)=>(t+1)%e>=0?t+1:-1,n=(e,a)=>r(t(e,a),a),s=(e,r)=>a(t(e,r),r),o=(t,a)=>r(e(t,a),a),h=(t,r)=>a(e(t,r),r),c=(c,d)=>[n,t,s,a,h,e,o,r].map((t=>t(c,d))),d=(t,e)=>{const r=[],a=[],n=t.length;let s,o=0;const h=()=>{const s=e=>e>0&&0!==t[e]&&e<n;for(;r.length;){const n=r.pop();if(!n)break;t[n]=0,a[o].add(n),c(n,e).forEach((t=>{s(t)&&r.push(t)}))}};for(s=0;s<n;s+=1)0!==t[s]&&(a[o]=new Set,r.push(s),h(),o+=1);return a},i=.3,l=(t,e)=>Math.floor(t/e),u=t=>null!=t,m=({segments:t,width:e,scaleWidth:r,scaleHeight:a})=>t.map((t=>{let n=Number.MAX_VALUE,s=Number.MAX_VALUE,o=Number.MIN_VALUE,h=Number.MIN_VALUE;t.forEach((t=>{const r=((t,e)=>{return[(r=t,a=e,r%a),l(t,e)];var r,a})(t,e);r[0]<n&&(n=r[0]),r[1]<s&&(s=r[1]),r[0]>o&&(o=r[0]),r[1]>h&&(h=r[1])}));const c=(o-n)*(h-s);return c>5&&c<500?{perimeter:c,x1:Math.trunc(n/i/r),y1:Math.trunc(s/i/a),x2:Math.trunc(o/i/r),y2:Math.trunc(h/i/a)}:null})).filter(u),g=(t,e,r)=>{const a=((t,e=120)=>{const r=t.width*t.height,a=new Uint8ClampedArray(r);let n,s=0,o=0,h=0,c=0;for(n=0;n<r;n+=1){const r=n<<2;s=t.data[r+0],o=t.data[r+1],h=t.data[r+2],c=77*s+151*o+28*h>>8,c<e&&(a[n]=1)}return a})(t);return m({segments:d(a,t.width),width:t.width,scaleWidth:e,scaleHeight:r})};onmessage=({data:t})=>{const e=g(t.iData,t.resizedToBorderScaleWidth,t.resizedToBorderScaleHeight);postMessage({segments:e})};